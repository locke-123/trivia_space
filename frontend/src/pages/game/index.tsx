import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import HeaderComponent from '@/components/mainPage/header/header_component'
import RoomComponent from '@/components/mainPage/room/room_component'
import GameComponent from '@/components/mainPage/game/game_component'
import { useEffect, useRef, useState } from 'react'
import { Socket, io } from 'socket.io-client'
import router from 'next/router'

export default function Home() {
  const [isEntered, setIsEntered] = useState(false);
  const [roomList, setRoomList] = useState([]);
  const [roomNumber, setRoomNumber] = useState();
  
  const socketRef = useRef<Socket | null>(null);

  useEffect(() => {
      socketRef.current = io("http://127.0.0.1:3030");

      if (typeof window !== 'undefined') {
        socketRef.current.on("connect", () => {
            console.log("connection server");
        });

        socketRef.current.on("disconnect", () => {
          router.push("/");
          console.log("Disconnected from server");
        });

        socketRef.current.on("refresh room info", (res) => {
          setRoomList(res);
          console.log("room 정보 갱신");
        });

        socketRef.current.on("is room started",(res, number, duplicateAcc) => {
          if(duplicateAcc === true) {
            alert("이미 같은 계정으로 게임이 진행중 입니다.")
          } else {
            if(res === true) {
              alert("이미 시작한 방입니다.");
            } else {
              setIsEntered(true);
              setRoomNumber(number);
              socketRef.current!.emit("somebody enter room", number);
            }
          }
        })

        socketRef.current.emit("init");
    
        return () => {
            socketRef.current!.disconnect();
            console.log('소켓 연결 해제');
        };
      }
  },[])

  return (
    <>
      <Head>
        <title>Trivia Space</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <HeaderComponent socketRef={socketRef} />
        {isEntered ? <GameComponent roomNumber={roomNumber} socketRef={socketRef} setIsEntered={setIsEntered} />
         : <RoomComponent socketRef={socketRef} roomList={roomList} setRoomNumber={setRoomNumber} setIsEntered={setIsEntered} />}
      </main>
    </>
  )
}